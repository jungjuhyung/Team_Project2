<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="cho_mapper">
	<!-- 로그인 임시  -->
	<select id="sessionInsert" parameterType="String" resultType="com.ict.travel.lee.dao.MemberVO">
		SELECT * FROM user_t WHERE u_idx = #{u_idx}
	</select>
	
	<!-- 검색(지역,시군구,타입) 결과 paging용 카운트 -->
	<select id="tourListCount" parameterType="Map" resultType="int">
	    SELECT count(*) FROM tourapi_t
	     <where>
		      <if test="areaCode != 999">
		      	areaCode = #{areaCode} 
		      </if>
		      <if test="contentType != 999">
		      	AND contenttypeid = #{contentType} 
		      </if>
		      <if test="sigunguCode != 999">
		      	AND sigunguCode = #{sigunguCode} 
		      </if>
		      <if test="title != null">
		       AND title LIKE CONCAT('%', #{title}, '%') 
		      </if>
	      </where> 
	</select>
	
	<select id="tourPathListCount" parameterType="Map" resultType="int">
	    SELECT count(distinct path_post_idx) FROM pathpost_t
		    <choose>
		    	<when test="post_idxList != null ">
		            WHERE path_post_idx IN 
		            <foreach collection="post_idxList" item="path_post_idx" open="(" close=")" separator=",">
		                #{path_post_idx}
		            </foreach>
		            <if test="title != null">
		                AND title LIKE CONCAT('%', #{title}, '%')
		            </if>
		    	</when>
		    	<otherwise>
		           WHERE 1 = 0
		    	</otherwise>
		    </choose>
	</select>
	
	<!-- 페이징 검색 -->
	<!-- 지역 -->
	<select id="selectSearchTourList" parameterType="Map" resultType="searchVO">
		SELECT * FROM tourapi_t 
		<where>
			 <if test="areaCode != 999">
	            AND areaCode = #{areaCode}
	        </if>
	        <if test="sigunguCode != 999">
	            AND sigunguCode = #{sigunguCode}
	        </if>
	        <if test="contentType != 999">
	            AND contenttypeid = #{contentType}
	        </if>
	        <if test="title != null">
	            AND title LIKE CONCAT('%', #{title}, '%')
	        </if>
        </where>
        ORDER BY 
        <if test="order == null or order == '' or order == 'like'">
		    heart DESC, title ASC
		</if>
		<if test="order == 't_asc'">
		    title ASC, heart DESC
		</if>
		<if test="order == 't_desc'">
		    title DESC, heart DESC
		</if>
         LIMIT #{limit} OFFSET #{offset} 
	</select>
	
	<!-- 경로 -->
	<select id="selectPostIdxList" parameterType="Map" resultType="String">
		SELECT distinct path_post_idx FROM pathmarker_t
		<where>
			<if test="areaCode != 999">
	            AND areaCode = #{areaCode}
	        </if>
	        <if test="sigunguCode != 999">
	            AND sigunguCode = #{sigunguCode}
	        </if>
	        <if test="contentType != 999">
	            AND contenttypeid = #{contentType}
	        </if>
		</where>
	</select>
	
	<select id="selectSearchPathList" parameterType="Map" resultType="searchVO">
		SELECT * FROM pathpost_t
		 <where>
		 <choose>
			 <when test="post_idxList != null">
	            AND path_post_idx IN 
	            <foreach collection="post_idxList" item="path_post_idx" open="(" close=")" separator=",">
	                #{path_post_idx}
	            </foreach>
			 </when>
			 <otherwise>
	            AND 1 = 0
			 </otherwise>
		 </choose>
	    </where>
        ORDER BY 
        <if test="order == null or order == '' or order == 'like'">
		    heart DESC, title ASC
		</if>
		<if test="order == 't_asc'">
		    title ASC, heart DESC
		</if>
		<if test="order == 't_desc'">
		    title DESC, heart DESC
		</if>
         LIMIT #{limit} OFFSET #{offset} 
	</select>
	
	
	<!-- 지역 검색(지역,시군구,타입) -->
	<select id="selectTourList" parameterType="Map" resultType="choTourVO">
		SELECT contentid, contenttypeid, title, firstimage, heart FROM tourapi_t 
		<where>
			 <if test="areaCode != 999">
	            AND areaCode = #{areaCode}
	        </if>
	        <if test="sigunguCode != 999">
	            AND sigunguCode = #{sigunguCode}
	        </if>
	        <if test="contentType != 999">
	            AND contenttypeid = #{contentType}
	        </if>
	        <if test="title != null">
	            AND title LIKE CONCAT('%', #{title}, '%')
	        </if>
        </where>
        ORDER BY 
        <if test="order == null or order == '' or order == 'like'">
		    heart DESC, title ASC
		</if>
		<if test="order == 't_asc'">
		    title ASC, heart DESC
		</if>
		<if test="order == 't_desc'">
		    title DESC, heart DESC
		</if>
         LIMIT #{limit} OFFSET #{offset} 
	</select>
	
	
	
	
	<!-- 위시리스트 관련  -->
	<select id="selectPlaceWishList" parameterType="String" resultType="placeWishVO">
		SELECT * FROM placewish_t WHERE u_idx = #{u_idx}
	</select>

	
	<select id="selectPlaceOne" parameterType="String" resultType="placeWishVO">
		SELECT contentid, mapx, mapy, addr1, firstimage, title AS place_title , contenttypeid, sigungucode, areacode  FROM tourapi_t WHERE contentid = #{contentid}
	</select>
	
	<insert id="placeWishAdd" parameterType="Map">
		INSERT INTO 
		 placewish_t(u_idx, contentid, mapx, mapy, addr1, firstimage, place_title,contenttypeid,sigungucode, areacode, regdate) 
		 VALUES(#{u_idx}, #{placeWishVO.contentid}, #{placeWishVO.mapx}, #{placeWishVO.mapy}, #{placeWishVO.addr1}, #{placeWishVO.firstimage}, #{placeWishVO.place_title}, #{placeWishVO.contenttypeid}, #{placeWishVO.sigungucode}, #{placeWishVO.areacode}, sysdate())
	</insert>
	
	<!-- 추가된 장소 wish heart 증가 -->
	<update id="placeAddHeart" parameterType="String">
		UPDATE tourapi_t SET heart = heart + 1 WHERE contentid = #{contentid}
	</update>
	
	<delete id="placeWishRemove" parameterType="Map">
		DELETE FROM placewish_t WHERE contentid = #{placeWishVO.contentid} AND u_idx = #{u_idx}
	</delete>
	<!-- 삭제된 장소 wish heart 감소 -->
	<update id="placeRemoveHeart" parameterType="String">
		UPDATE tourapi_t SET heart = heart - 1 WHERE contentid = #{contentid}
	</update>
	
	
	
	<!-- 경로 검색(지역,시군구,타입) -->
	<select id="selectTourPathList" parameterType="Map" resultType="pathpostVO">
		SELECT * FROM pathpost_t
		<where>
			<if test="areaCode != 999">
	            AND r_areaCode = #{areaCode}
	        </if>
	        <if test="contentType != 999">
	            AND r_contenttypeid = #{contentType}
	        </if>
	        <if test="title != null">
	            AND title LIKE CONCAT('%', #{title}, '%')
	        </if>
        </where>
        ORDER BY 
        <if test="order == null or order == '' or order == 'like'">
		    heart DESC, title ASC
		</if>
		<if test="order == 't_asc'">
		    title ASC, heart DESC
		</if>
		<if test="order == 't_desc'">
		    title DESC, heart DESC
		</if>
         LIMIT #{limit} OFFSET #{offset} 
	</select>
	
	<!-- 경로 위시리스트 가져오기 -->
	<select id="selectpathWishList" parameterType="String" resultType="pathWishVO">
		SELECT * FROM pathwish_t WHERE u_idx= #{u_idx}
	</select>
	
	<!-- 좋아요한 경로 게시판 선택  -->
	<select id="selectPathWishOne" parameterType="String" resultType="pathWishVO">
		SELECT * FROM pathpost_t WHERE path_post_idx = #{path_post_idx}
	</select>
	
	<!-- 경로 좋아요 추가 -->
	<insert id="pathWishAdd" parameterType="Map">
		INSERT INTO 
		 pathwish_t(u_idx, path_post_idx, firstimage, contenttypeid, title ,regdate) 
		 VALUES(#{u_idx}, #{pathWishVO.path_post_idx}, #{pathWishVO.firstimage}, #{pathWishVO.contenttypeid},#{pathWishVO.title}, sysdate())
	</insert>
	<!-- 추가된 wish heart 증가 -->
	<update id="pathPostAddHeart" parameterType="String">
		UPDATE pathpost_t SET heart = heart + 1 WHERE path_post_idx = #{path_post_idx}
	</update>
	
	<!-- 경로 좋아요 삭제 -->
	<delete id="pathWishRemove" parameterType="Map">
		DELETE FROM pathwish_t WHERE path_post_idx = #{pathWishVO.path_post_idx} AND u_idx = #{u_idx}
	</delete>
	<!-- 삭제된 장소 wish heart 감소 -->
	<update id="pathRemoveHeart" parameterType="String">
		UPDATE pathpost_t SET heart = heart - 1 WHERE path_post_idx = #{path_post_idx}
	</update>
	
	<!-- 장소 업데이트 -->
	<update id="placeUpdate" parameterType="tourapiVO">
			UPDATE tourapi_t 
			 SET 
				addr1 = #{addr1},
		        addr2 = #{addr2},
		        areacode = #{areacode},
		        cat1 = #{cat1},
		        cat2 = #{cat2},
		        cat3 = #{cat3},
		        contentid = #{contentid},
		        contenttypeid = #{contenttypeid},
		        createdtime = #{createdtime},
		        firstimage = #{firstimage},
		        mapx = #{mapx},
		        mapy = #{mapy},
		        modifiedtime = #{modifiedtime},
		        sigungucode = #{sigungucode},
		        tel = #{tel},
		        title = #{title},
		        zipcode = #{zipcode},
		        regdate = sysdate()
		    WHERE contenttypeid = #{contenttypeid} AND contentid = #{contentid}
	</update>
	<insert id="placeInsert" parameterType="tourapiVO">
			INSERT INTO 
			 tourapi_t(addr1, addr2, areacode, cat1, cat2, cat3, contentid, contenttypeid, 
			 createdtime, firstimage, mapx, mapy, modifiedtime, sigungucode, tel, title, zipcode,heart, regdate)
			 
			 VALUES(#{addr1}, #{addr2}, #{areacode}, #{cat1}, #{cat2}, #{cat3}, 
			 #{contentid}, #{contenttypeid}, #{createdtime}, #{firstimage}, 
			 #{mapx}, #{mapy}, #{modifiedtime}, #{sigungucode}, #{tel}, 
			 #{title}, #{zipcode}, 0, sysdate())
	</insert>
	

	
</mapper>
